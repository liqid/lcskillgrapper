<?php
namespace LC\Transfer;

/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Exception\TApplicationException;


final class SkillType {
  const ACTIVE = 0;
  const PASSIVE = 1;
  static public $__names = array(
    0 => 'ACTIVE',
    1 => 'PASSIVE',
  );
}

final class Unit {
  const NONE = 0;
  const PERCENT = 1;
  const SECONDS = 2;
  static public $__names = array(
    0 => 'NONE',
    1 => 'PERCENT',
    2 => 'SECONDS',
  );
}

class Character extends TBase {
  static $_TSPEC;

  public $characterId = null;
  public $name = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'characterId',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'Character';
  }

  public function read($input)
  {
    return $this->_read('Character', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('Character', self::$_TSPEC, $output);
  }
}

class ConditionType extends TBase {
  static $_TSPEC;

  public $conditionTypeId = null;
  public $name = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'conditionTypeId',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ConditionType';
  }

  public function read($input)
  {
    return $this->_read('ConditionType', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ConditionType', self::$_TSPEC, $output);
  }
}

class Condition extends TBase {
  static $_TSPEC;

  public $conditionId = null;
  public $conditionType = null;
  public $value = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'conditionId',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'conditionType',
          'type' => TType::STRUCT,
          'class' => '\LC\Transfer\ConditionType',
          ),
        3 => array(
          'var' => 'value',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'Condition';
  }

  public function read($input)
  {
    return $this->_read('Condition', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('Condition', self::$_TSPEC, $output);
  }
}

class EffectType extends TBase {
  static $_TSPEC;

  public $effectTypeId = null;
  public $name = null;
  public $unit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'effectTypeId',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'unit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'EffectType';
  }

  public function read($input)
  {
    return $this->_read('EffectType', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('EffectType', self::$_TSPEC, $output);
  }
}

class Effect extends TBase {
  static $_TSPEC;

  public $effectId = null;
  public $effectType = null;
  public $value = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'effectId',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'effectType',
          'type' => TType::STRUCT,
          'class' => '\LC\Transfer\EffectType',
          ),
        3 => array(
          'var' => 'value',
          'type' => TType::DOUBLE,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'Effect';
  }

  public function read($input)
  {
    return $this->_read('Effect', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('Effect', self::$_TSPEC, $output);
  }
}

class Tier extends TBase {
  static $_TSPEC;

  public $tierId = null;
  public $sp = null;
  public $mana = null;
  public $effects = null;
  public $conditions = null;
  public $money = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'tierId',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'sp',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'mana',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'effects',
          'type' => TType::SET,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\LC\Transfer\Effect',
            ),
          ),
        5 => array(
          'var' => 'conditions',
          'type' => TType::SET,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\LC\Transfer\Condition',
            ),
          ),
        6 => array(
          'var' => 'money',
          'type' => TType::DOUBLE,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'Tier';
  }

  public function read($input)
  {
    return $this->_read('Tier', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('Tier', self::$_TSPEC, $output);
  }
}

class Skill extends TBase {
  static $_TSPEC;

  public $skillId = null;
  public $name = null;
  public $character = null;
  public $info = null;
  public $type = null;
  public $tiers = null;
  public $iconURL = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'skillId',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'character',
          'type' => TType::STRUCT,
          'class' => '\LC\Transfer\Character',
          ),
        4 => array(
          'var' => 'info',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'type',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'tiers',
          'type' => TType::SET,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\LC\Transfer\Tier',
            ),
          ),
        7 => array(
          'var' => 'iconURL',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'Skill';
  }

  public function read($input)
  {
    return $this->_read('Skill', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('Skill', self::$_TSPEC, $output);
  }
}


